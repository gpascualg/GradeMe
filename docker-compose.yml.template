version: "3.7"
services:
  secrets-simulator:
    image: mikesir87/secrets-simulator
    environment:
      RABBIT_USER: admin
      RABBIT_PASS: password1234
      FLASK_SECRET: qweqwe
    volumes:
      - secrets:/run/secrets:rw

  webhooks:
    build: 
      context: .
      dockerfile: servers/webhooks/Dockerfile
    ports:
      - 8080:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - secrets:/run/secrets:ro
    depends_on:
      - mongo
      - rabbit
      - secrets-simulator
    networks:
      - backend
    command: --http :80 --gevent 1000 --master --wsgi-file /opt/start_service.py --callable app --pyargv "--no-cli --github-fake-id 123 --no-github-init --github-api-key=231af25d0 --github-org=TNUI-UB --mongo-host=mongo"

  frontend:
    build:
      context: .
      dockerfile: servers/frontend/Dockerfile
    volumes:
      - /tmp/static:/static
      - secrets:/run/secrets:ro
    ports:
      - 9090:80
    depends_on:
      - mongo
      - rabbit
      - secrets-simulator
    networks:
      - backend
    command: --http :80 --gevent 1000 --http-websockets --master --wsgi-file /opt/start_frontend.py --callable app --pyargv "--mongo-host=mongo"

  mongo:
    image: "mongo:3.4"
    container_name: "mongo"
    volumes:
      - mongodb-data:/data/db
    expose:
      - 27017
    networks:
      - backend

  rabbit:
    image: rabbitmq:3.7
    hostname: rabbit
    container_name: rabbit
    environment:
      - RABBITMQ_DEFAULT_USER_FILE=/run/secrets/RABBIT_USER
      - RABBITMQ_DEFAULT_PASS_FILE=/run/secrets/RABBIT_PASS
    volumes:
      - secrets:/run/secrets:ro
    depends_on:
      - secrets-simulator
    expose:
      - 5672
    networks:
      - results
      - backend

  agent-base:
    build: 
      context: .
      dockerfile: agents/base/Dockerfile
    networks:
      - results
    image: agent-base
    command: "true"

  agent-bootstrap:
    build:
      context: .
      dockerfile: agents/agent-bootstrap/Dockerfile
    image: agent-bootstrap
    command: "true"

  agent-python3:
    build: agents/agent-python3
    image: agent-python3
    depends_on: 
      - agent-base
    command: "true"
  
  agent-telegram:
    build: agents/agent-telegram
    image: agent-telegram
    depends_on: 
      - agent-python3
    command: "true"

networks:
  backend:
    driver: bridge
    name: backend
  results:
    internal: true
    name: results

volumes:
  mongodb-data:
    driver: local
  secrets:
    driver: local
    name: grademe-secrets
