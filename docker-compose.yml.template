version: "3"
services:
  webhooks:
    build: 
      context: .
      dockerfile: servers/webhooks/Dockerfile
    ports:
      - 8080:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - mongo
      - rabbit
      - rabbit-private
    networks:
      - backend
    command: --no-cli --github-org-id 123 --no-github-init --github-api-key=231af25d0 --github-org=TNUI-UB --broadcast-secret=qwead123 --mongo-host=mongo --host=0.0.0.0 --port=80

  frontend:
    build:
      context: .
      dockerfile: servers/frontend/Dockerfile
    ports:
      - 9090:80
    depends_on:
      - mongo
      - rabbit-private
    networks:
      - backend
    command: --mongo-host=mongo --host=0.0.0.0 --port=80

  mongo:
    image: "mongo:3.4"
    container_name: "mongo"
    volumes:
      - mongodb-data:/data/db
    ports:
      - 27017:27017
    networks:
      - backend

  rabbit:
    image: rabbitmq:3.7
    hostname: rabbit
    container_name: rabbit
    networks:
      - results

  rabbit-private:
    image: rabbitmq:3.7
    hostname: rabbit-private
    container_name: rabbit-private
    networks:
      - backend

  agent-base:
    build: 
      context: .
      dockerfile: agents/base/Dockerfile
    networks:
      - results
    image: agent-base
    command: "true"

  agent-bootstrap:
    build:
      context: .
      dockerfile: agents/agent-bootstrap/Dockerfile
    image: agent-bootstrap
    command: "true"

  agent-python3:
    build: agents/agent-python3
    image: agent-python3
    depends_on: 
      - agent-base
    command: "true"
  
  agent-telegram:
    build: agents/agent-telegram
    image: agent-telegram
    depends_on: 
      - agent-python3
    command: "true"

networks:
  backend:
    driver: bridge
  results:
    internal: true

volumes:
  mongodb-data:
